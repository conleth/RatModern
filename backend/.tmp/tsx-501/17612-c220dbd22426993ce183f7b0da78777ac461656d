{"code":"var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});import fetch from\"node-fetch\";import{loadRallyConfig}from\"../../config/rally.js\";async function postForm(url,form){const response=await fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/x-www-form-urlencoded\"},body:form});if(!response.ok){const text=await response.text();throw new Error(`Rally token request failed: ${response.status} ${text}`)}return await response.json()}__name(postForm,\"postForm\");class RallyAdapter{constructor(){this.name=\"rally\"}static{__name(this,\"RallyAdapter\")}async exchangeCode(code){const config=loadRallyConfig();const form=new URLSearchParams;form.append(\"grant_type\",\"authorization_code\");form.append(\"code\",code);form.append(\"redirect_uri\",config.redirectUri);form.append(\"client_id\",config.clientId);form.append(\"client_secret\",config.clientSecret);const tokenResponse=await postForm(config.tokenUrl,form);return{accessToken:tokenResponse.access_token,refreshToken:tokenResponse.refresh_token}}async linkTask(payload,context){const config=loadRallyConfig();const response=await fetch(`${config.apiBaseUrl}/hierarchicalrequirement/${payload.workItemId}`,{method:\"POST\",headers:{Authorization:`Bearer ${context.accessToken}`,\"Content-Type\":\"application/json\"},body:JSON.stringify({CustomFields:{OWASPTaskId__c:payload.taskId,...payload.metadata}})});if(!response.ok){const text=await response.text();throw new Error(`Failed to link Rally work item: ${text}`)}}async getWorkItem(workItemId,context){const config=loadRallyConfig();const response=await fetch(`${config.apiBaseUrl}/artifact/${encodeURIComponent(workItemId)}`,{headers:{Authorization:`Bearer ${context.accessToken}`}});if(!response.ok){const text=await response.text();throw new Error(`Failed to read Rally work item: ${text}`)}return response.json()}}const createRallyAdapter=__name(()=>new RallyAdapter,\"createRallyAdapter\");export{createRallyAdapter};\n","warnings":[],"map":{"version":3,"mappings":"kHAAA,OAAO,UAAW,aAElB,OAAS,oBAAuB,wBAehC,eAAe,SAAS,IAAa,KAAuB,CAC1D,MAAM,SAAW,MAAM,MAAM,IAAK,CAChC,OAAQ,OACR,QAAS,CACP,eAAgB,mCAClB,EACA,KAAM,IACR,CAAC,EAED,GAAI,CAAC,SAAS,GAAI,CAChB,MAAM,KAAO,MAAM,SAAS,KAAK,EACjC,MAAM,IAAI,MAAM,+BAA+B,SAAS,MAAM,IAAI,IAAI,EAAE,CAC1E,CAEA,OAAQ,MAAM,SAAS,KAAK,CAC9B,CAfe,4BAiBf,MAAM,YAAyC,CAA/C,cACE,KAAgB,KAAO,QAnCzB,MAkC+C,6BAG7C,MAAM,aAAa,KAGhB,CACD,MAAM,OAAS,gBAAgB,EAC/B,MAAM,KAAO,IAAI,gBACjB,KAAK,OAAO,aAAc,oBAAoB,EAC9C,KAAK,OAAO,OAAQ,IAAI,EACxB,KAAK,OAAO,eAAgB,OAAO,WAAW,EAC9C,KAAK,OAAO,YAAa,OAAO,QAAQ,EACxC,KAAK,OAAO,gBAAiB,OAAO,YAAY,EAEhD,MAAM,cAAgB,MAAM,SAAS,OAAO,SAAU,IAAI,EAE1D,MAAO,CACL,YAAa,cAAc,aAC3B,aAAc,cAAc,aAC9B,CACF,CAEA,MAAM,SACJ,QACA,QACe,CACf,MAAM,OAAS,gBAAgB,EAC/B,MAAM,SAAW,MAAM,MACrB,GAAG,OAAO,UAAU,4BAA4B,QAAQ,UAAU,GAClE,CACE,OAAQ,OACR,QAAS,CACP,cAAe,UAAU,QAAQ,WAAW,GAC5C,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CACnB,aAAc,CACZ,eAAgB,QAAQ,OACxB,GAAG,QAAQ,QACb,CACF,CAAC,CACH,CACF,EAEA,GAAI,CAAC,SAAS,GAAI,CAChB,MAAM,KAAO,MAAM,SAAS,KAAK,EACjC,MAAM,IAAI,MAAM,mCAAmC,IAAI,EAAE,CAC3D,CACF,CAEA,MAAM,YACJ,WACA,QACkB,CAClB,MAAM,OAAS,gBAAgB,EAC/B,MAAM,SAAW,MAAM,MACrB,GAAG,OAAO,UAAU,aAAa,mBAAmB,UAAU,CAAC,GAC/D,CACE,QAAS,CACP,cAAe,UAAU,QAAQ,WAAW,EAC9C,CACF,CACF,EAEA,GAAI,CAAC,SAAS,GAAI,CAChB,MAAM,KAAO,MAAM,SAAS,KAAK,EACjC,MAAM,IAAI,MAAM,mCAAmC,IAAI,EAAE,CAC3D,CAEA,OAAO,SAAS,KAAK,CACvB,CACF,CAEO,MAAM,mBAAqC,WAAM,IAAI,aAAV","names":[],"ignoreList":[],"sources":["/Users/ck/OwaspRatRemake/backend/src/ticketing/adapters/rallyAdapter.ts"],"sourcesContent":[null]}}